{% if virtual.CERT_NAME %}
server {
    server_name ~^{{ virtual.host }}$;
    listen 80;
    rewrite ^(.*) https://{{ virtual.host }}$1 permanent;
}

server {
    server_name {{ virtual.host }};
    listen 443 ssl;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    ssl_certificate /etc/nginx/certs/{{ virtual.CERT_NAME }}.crt;
    ssl_certificate_key /etc/nginx/certs/{{ virtual.CERT_NAME }}.key;

{% for path, containers in virtual.paths %}
    location {{ path }} {
        proxy_pass http://upstream_{{ virtual.host }}{{ path | replace('/', '_') }};
    }
{% endfor %}
}

{% else %}
server {
	server_name {{ virtual.host }};
	listen 80;

{% for path, containers in virtual.paths %}
    location {{ path }} {
        proxy_pass http://upstream_{{ virtual.host }}{{ path | replace('/', '_') }};
    }
{% endfor %}
}

{% endif %}

# upstreams
{% for path, containers in virtual.paths %}
upstream upstream_{{ virtual.host }}{{ path | replace('/', '_') }} {
{% for container in containers %}
	server {{ container.NetworkSettings.IPAddress }}:{{ container.Env.VIRTUAL_PORT }};
{% endfor %}
}
{% endfor %}
